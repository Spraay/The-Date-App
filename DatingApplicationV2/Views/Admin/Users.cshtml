@using Pagination;
@model PaginatedList<ApplicationUserViewModel>


@{
    ViewData["Title"] = "Users";
}


@*@using (Html.BeginForm("Users", "Admin", FormMethod.Get))
    {
        <p>
            Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }*@
<div class="container">
    <h2>Users</h2>
    <div class="row">
        <form asp-action="Users" method="get" class="col s12">
            <div class="row">
                <div class="input-field col s6">
                    <i class="material-icons prefix">search</i>

                    <input id="search" type="text" name="SearchString" value="@ViewData["currentFilter"]">
                    <label for="search">Find by phrase</label>

                </div>

            </div>
        </form>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Users" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().FirstName)</a>
                    @*<a asp-action="Users" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">First Name</a>*@
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Height)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Weight)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.BirthDate)
                    </th>*@
                <th>
                    <a asp-action="Users" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().BirthDate)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Gender)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Eyes)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
                </th>
                <th>Options</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Height)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BirthDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Eyes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>

                    <a asp-controller="User" asp-action="Details" asp-route-id="@item.Id" class="btn-floating blue waves-effect waves-light">
                        <i class="material-icons">info</i>
                    </a>
                
                </td>
            </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <div class="row col s12">
        <div class="col s6 m6 l6 left-align">
            <ul class="pagination">
                <li><label>Items per Site</label></li>
                <li class="@(ViewData["PageSize"].ToString()=="1" ? "waves-effect active":"waves-effect")">
                    <a asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageSize="1"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">1</a>
                </li>
                <li class="@(ViewData["PageSize"].ToString()=="5" ? "waves-effect active":"waves-effect")">
                    <a asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageSize="5"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">5</a>
                </li>
                <li class="@(ViewData["PageSize"].ToString()=="10" ? "waves-effect active":"waves-effect")">
                    <a asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageSize="10"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">10</a>
                </li>
                <li class="@(ViewData["PageSize"].ToString()=="20" ? "waves-effect active":"waves-effect")">
                    <a asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageSize="20"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">20</a>
                </li>
                <li class="@(ViewData["PageSize"].ToString()=="40" ? "waves-effect active":"waves-effect")">
                    <a asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageSize="40"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">40</a>
                </li>
            </ul>
        </div>
        <div class="col s6 m6 l6 right-align">

            <ul class="pagination">
                <li><label>Site</label></li>
                <li class="@prevDisabled">
                    <a asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-page="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-pageSize="@ViewData["PageSize"]">
                        <i class="material-icons">chevron_left</i>
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="@(i==Model.PageIndex ? "waves-effect active":"waves-effect")">
                        <a asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-page="@i"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-pageSize="@ViewData["PageSize"]">@i</a>
                    </li>
                }

                <li class="@nextDisabled">
                    <a asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-page="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-pageSize="@ViewData["PageSize"]">
                        <i class="material-icons">chevron_right</i>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>
<br /><br />
    <script>
        $(document).ready(function () {
            $("#cross").on("click", function (event) {
                $("#input").val("");
            });
        });
    </script>
