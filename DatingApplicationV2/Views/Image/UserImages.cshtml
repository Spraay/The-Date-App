@model IEnumerable<Entity.Image>
@using Microsoft.AspNetCore.Identity
@using DatingApplicationV2.Areas.Identity
@using Entity
@using Service.IService
@inject UserManager<User> _userManager
@inject IImageLikeService _imageLikeService
@inject IUserService _userService
@{
    ViewData["Title"] = "UserImages";
}
@if (Model.Count() == 0)
{
    <br /><br /><br />
    <div class="container">
        <div class="row grey z-depth-2">
            <h1 class="col s12 white-text">
                <b>
                    Upss... <i class="material-icons large left">
                        sentiment_very_dissatisfied
                    </i>
                </b>
            </h1>
            <h1 class="col s12 white-text center">
                <b>
                    <i class="material-icons large pulse">
                        person_add_disabled
                    </i>
                </b>
            </h1>
            <h4 class="center white-text">Your gallery seems to be empty!</h4>
            <h5 class="center white-text">Do you want to add photos? Click the green, plus button</h5>

            <br /><br /><br />
        </div>
        <div class="row">
            <p class="center-align">

                <a asp-action="Create" style="position: relative; bottom: 45px;" class="btn btn-floating btn-large waves-effect green pulse">
                    <i class="material-icons">add</i>
                </a>
            </p>
        </div>
        <div class=" col s12">
            <h4 class="center"></h4>
        </div>
    </div>
}
else
{
    <div class="parallax-container" style="height: 300px">
        <div class="section no-pad-bot">
            <div class="container">
                <h1 class="header white-text text-darken-1">User Gallery</h1>
                <div class="row col blue darken-1">
                    <h5 class=" center col s12 white-text">
                        In the list below you can see your photos!
                    </h5>
                </div>
            </div>
        </div>
        <div class="parallax"><img src="~/images/photographer.jpg" alt="Unsplashed background img 1" style="opacity: 1; transform: translate3d(-50%, 168.122px, 0px);"></div>
    </div>
    <div class="row">
        <div class="col s12">
            <div class="fixed-action-btn direction-top" style="top: 100px; right: 40px;">
                <a asp-action="Create" class="btn-floating btn-large green waves-effect waves-light pulse">
                    <i class="material-icons">add</i>
                </a>
            </div>
        </div>
    </div>
    <div class="container">

        @foreach (var item in Model)
        {

            <div class="card">
                <div class="card-image waves-effect waves-block waves-light">
                    <img class="" src="~/images/userimages/@Html.DisplayFor(modelItem => item.Src)" />
                    <div class="card-title" style="width:100%; background: rgba(0, 0, 0, 0.5);">
                        <div class="container">
                            <span class="left">@Html.DisplayFor(modelItem => item.Title)</span>
                        </div>
                        @if (item.UserId == Guid.Parse(_userManager.GetUserId(User)))
                        {
                        <span class="right">

                            <a class="btn btn-large red waves-effect waves-light tooltipped"
                               data-position="top"
                               data-tooltip="Delete Photo"
                               asp-action="Delete"
                               asp-route-id="@item.Id"
                               asp-route-returnURL="@Url.RouteUrl(ViewContext.RouteData.Values)">
                                <i class="material-icons">delete_forever</i>
                            </a>
                            <a class="btn btn-large blue waves-effect waves-light tooltipped"
                               data-position="top"
                               data-tooltip="Edit Photo"
                               asp-action="Edit"
                               asp-route-id="@item.Id"
                               asp-route-returnURL="@Url.RouteUrl(ViewContext.RouteData.Values)">
                                <i class="material-icons">edit</i>
                            </a>
                            <a class="btn btn-large green waves-effect waves-light tooltipped"
                               data-position="top"
                               data-tooltip="Set As Profile Photo"
                               asp-action="SetProfilePhoto"
                               asp-route-id="@item.Id"
                               asp-route-returnURL="@Url.RouteUrl(ViewContext.RouteData.Values)">
                                <i class="material-icons">face</i>
                            </a>
                        </span>
                        }
                    </div>
                </div>
                <div class="collapsible z-depth-0">
                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                    <hr />
                    <ul class="collapsible">
                        <li>
                            <div class="collapsible-header"><a class="btn-flat"> @_imageLikeService.CountImageLikes(item.Id) Likes</a></div>
                            <div class="collapsible-body"><span>Lorem ipsum dolor sit amet.</span></div>
                        </li>
                        <li>
                            <div class="collapsible-header"><a class="btn-flat">4 Comments</a></div>
                            <div class="collapsible-body"><span>Lorem ipsum dolor sit amet.</span></div>
                        </li>
                    </ul>
                </div>
            </div>
        }
    </div>
}







